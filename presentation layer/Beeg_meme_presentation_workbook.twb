<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1227.1336                               -->
<workbook original-version='18.1' source-build='2023.3.1 (20233.23.1227.1336)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <Extensions />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.ParameterDefaultValues.true...ParameterDefaultValues />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Choose source' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;all&quot;'>
        <calculation class='tableau' formula='&quot;all&quot;' />
        <members>
          <member value='&quot;all&quot;' />
          <member value='&quot;imgur&quot;' />
          <member value='&quot;reddit&quot;' />
          <member value='&quot;tumblr&quot;' />
        </members>
      </column>
      <column caption='Choose sentiment' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;positive&quot;'>
        <calculation class='tableau' formula='&quot;positive&quot;' />
        <members>
          <member value='&quot;negative&quot;' />
          <member value='&quot;neutral&quot;' />
          <member value='&quot;positive&quot;' />
        </members>
      </column>
      <column _.fcp.ParameterDefaultValues.true...source-field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[cluster]' caption='Choose cluster' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;-1&quot;'>
        <calculation class='tableau' formula='&quot;-1&quot;' />
      </column>
      <column caption='Sample size' datatype='integer' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
      </column>
    </datasource>
    <datasource caption='meme (localhost)' inline='true' name='federated.0p82x6i1mcx5ax19mse3b0aupcx3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='cdata_cassandra.0kgztg50em21kg1gs8q81019z0ha'>
            <connection authentication='auth-none' class='cdata_cassandra' one-time-sql='' port='9042' server='localhost' username='cassandra' v-aggregationssupported='true' v-allowfiltering='false' v-authscheme='basic' v-autocache='false' v-batchsize='0' v-browsableschemas='' v-cacheconnection='' v-cachedriver='' v-cachelocation='' v-cachemetadata='false' v-cachetolerance='600' v-casesensitivity='true' v-connectionlifetime='0' v-connectonopen='true' v-consistencylevel='one' v-database='' v-defaultldapuser='' v-firewallpassword='' v-firewallport='0' v-firewallserver='' v-firewalltype='none' v-firewalluser='' v-flattenarrays='' v-flattenobjects='false' v-kerberoskdc='' v-kerberoskeytabfile='' v-kerberosrealm='' v-kerberosservicekdc='' v-kerberosservicerealm='' v-kerberosspn='' v-kerberosticketcache='' v-ldappassword='' v-ldapport='' v-ldapserver='' v-location='' v-logfile='' v-logmodules='' v-maxlogfilecount='-1' v-maxlogfilesize='100MB' v-maxrows='-1' v-nulltounset='false' v-offline='false' v-other='' v-pagesize='5000' v-poolidletimeout='60' v-poolmaxsize='100' v-poolminsize='1' v-poolwaittime='60' v-pseudocolumns='' v-querypassthrough='false' v-readonly='false' v-rowscandepth='100' v-rtk='' v-searchbase='' v-searchfilter='' v-sshauthmode='password' v-sshclientcert='' v-sshclientcertpassword='' v-sshclientcertsubject='*' v-sshclientcerttype='pemkey_file' v-sshpassword='' v-sshport='22' v-sshserver='' v-sshserverfingerprint='' v-sshuser='' v-sslclientcert='' v-sslclientcertpassword='' v-sslclientcertsubject='*' v-sslclientcerttype='user' v-sslservercert='' v-tables='' v-timeout='60' v-useconnectionpooling='false' v-usejsonformat='true' v-userdefinedviews='' v-usessh='false' v-usessl='false' v-varinttostring='true' v-verbosity='1' v-views='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='cdata_cassandra.0kgztg50em21kg1gs8q81019z0ha' name='meme' table='[beeg].[meme]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='cdata_cassandra.0kgztg50em21kg1gs8q81019z0ha' name='meme' table='[beeg].[meme]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>global_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[global_id]</local-name>
            <parent-name>[meme]</parent-name>
            <remote-alias>global_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[meme_4D50A20FC48E4F7EB2160D656EE6E4E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>author</remote-name>
            <remote-type>129</remote-type>
            <local-name>[author]</local-name>
            <parent-name>[meme]</parent-name>
            <remote-alias>author</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2000</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[meme_4D50A20FC48E4F7EB2160D656EE6E4E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cluster</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cluster]</local-name>
            <parent-name>[meme]</parent-name>
            <remote-alias>cluster</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2000</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[meme_4D50A20FC48E4F7EB2160D656EE6E4E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>created_time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[created_time]</local-name>
            <parent-name>[meme]</parent-name>
            <remote-alias>created_time</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2000</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[meme_4D50A20FC48E4F7EB2160D656EE6E4E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[meme]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2000</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[meme_4D50A20FC48E4F7EB2160D656EE6E4E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>embeddings</remote-name>
            <remote-type>129</remote-type>
            <local-name>[embeddings]</local-name>
            <parent-name>[meme]</parent-name>
            <remote-alias>embeddings</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2000</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[meme_4D50A20FC48E4F7EB2160D656EE6E4E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>entities</remote-name>
            <remote-type>129</remote-type>
            <local-name>[entities]</local-name>
            <parent-name>[meme]</parent-name>
            <remote-alias>entities</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2000</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[meme_4D50A20FC48E4F7EB2160D656EE6E4E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>score</remote-name>
            <remote-type>3</remote-type>
            <local-name>[score]</local-name>
            <parent-name>[meme]</parent-name>
            <remote-alias>score</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[meme_4D50A20FC48E4F7EB2160D656EE6E4E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiments</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sentiments]</local-name>
            <parent-name>[meme]</parent-name>
            <remote-alias>sentiments</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2000</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[meme_4D50A20FC48E4F7EB2160D656EE6E4E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source]</local-name>
            <parent-name>[meme]</parent-name>
            <remote-alias>source</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2000</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[meme_4D50A20FC48E4F7EB2160D656EE6E4E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>text</remote-name>
            <remote-type>129</remote-type>
            <local-name>[text]</local-name>
            <parent-name>[meme]</parent-name>
            <remote-alias>text</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2000</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[meme_4D50A20FC48E4F7EB2160D656EE6E4E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>url</remote-name>
            <remote-type>129</remote-type>
            <local-name>[url]</local-name>
            <parent-name>[meme]</parent-name>
            <remote-alias>url</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2000</width>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[meme_4D50A20FC48E4F7EB2160D656EE6E4E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Empty' datatype='string' name='[Calculation_388998464022405122]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot; &quot;' />
      </column>
      <column caption='Seed' datatype='integer' name='[Calculation_388998464026365955]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(DATEPART(&apos;second&apos;, NOW()) + 1) * (DATEPART(&apos;minute&apos;, NOW()) + 1) * (DATEPART(&apos;hour&apos;, NOW()) + 1) * (DATEPART(&apos;day&apos;, NOW()) + 1)' />
      </column>
      <column caption='Random_val' datatype='real' name='[Calculation_388998464027226116]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((PREVIOUS_VALUE(MIN([Calculation_388998464026365955])) * 1140671485 + 12820163) % (2^24))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Random_int' datatype='integer' name='[Calculation_388998464027385861]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT([Calculation_388998464027226116] / (2^24) * 100) + 1'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='index' datatype='integer' name='[Calculation_388998464028057606]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Choose source' datatype='boolean' name='[Calculation_388998464045072394]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1] = [source] OR [Parameters].[Parameter 1]=&quot;all&quot;' />
      </column>
      <column caption='A seven' datatype='integer' name='[Calculation_388998464062742540]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='7' />
      </column>
      <column caption='Choose sentiment' datatype='boolean' name='[Calculation_388998464064802829]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 2] = [sentiments - Split 1]' />
      </column>
      <column caption='Choose cluster' datatype='boolean' name='[Calculation_388998464090005518]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 3] = [cluster]' />
      </column>
      <column caption='Take last' datatype='boolean' name='[Calculation_388998464099541007]' role='measure' type='nominal'>
        <calculation class='tableau' formula='INDEX()=SIZE()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='destorage url' datatype='string' name='[Calculation_926052719828213760]' role='dimension' semantic-role='[URL]' type='nominal'>
        <calculation class='tableau' formula='IF STARTSWITH([url], &apos;https://storage.cloud&apos;) THEN&#13;&#10;MID([url], 51)&#13;&#10;ELSE&#13;&#10;[url]&#13;&#10;END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='meme' datatype='table' name='[__tableau_internal_object_id__].[meme_4D50A20FC48E4F7EB2160D656EE6E4E5]' role='measure' type='quantitative' />
      <column caption='sentiment-name' datatype='string' name='[sentiments - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[sentiments]'>
        <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( SPLIT( [sentiments], &quot;[&quot;, 2 ), &quot;{&quot;, 2 ), &quot;&quot;&quot;&quot;, 4 ) )' />
      </column>
      <column aggregation='CountD' caption='sentiments-score' datatype='real' datatype-customized='true' name='[sentiments - Split 2]' role='measure' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[sentiments]'>
        <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( SPLIT( SPLIT( SPLIT( SPLIT( [sentiments], &quot;[&quot;, 2 ), &quot;{&quot;, 2 ), &quot;&quot;&quot;&quot;, 7 ), &quot;:&quot;, 2 ), &quot;}&quot;, 1 ) ))' />
      </column>
      <column datatype='string' name='[source]' role='dimension' type='nominal' />
      <column datatype='string' name='[url]' role='dimension' semantic-role='[URL]' type='nominal' />
      <column-instance column='[sentiments - Split 1]' derivation='None' name='[none:sentiments - Split 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:sentiments - Split 1:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;positive&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;negative&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;neutral&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:source:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;imgur&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;reddit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;tumblr&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Poland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Choose source' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;all&quot;'>
          <calculation class='tableau' formula='&quot;all&quot;' />
        </column>
        <column caption='Choose sentiment' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;positive&quot;'>
          <calculation class='tableau' formula='&quot;positive&quot;' />
        </column>
        <column _.fcp.ParameterDefaultValues.true...source-field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[cluster]' caption='Choose cluster' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;-1&quot;'>
          <calculation class='tableau' formula='&quot;-1&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='meme' id='meme_4D50A20FC48E4F7EB2160D656EE6E4E5'>
            <properties context=''>
              <relation connection='cdata_cassandra.0kgztg50em21kg1gs8q81019z0ha' name='meme' table='[beeg].[meme]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Average score by sentiment'>
      <table>
        <view>
          <datasources>
            <datasource caption='meme (localhost)' name='federated.0p82x6i1mcx5ax19mse3b0aupcx3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose source' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;all&quot;'>
              <calculation class='tableau' formula='&quot;all&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0p82x6i1mcx5ax19mse3b0aupcx3'>
            <column caption='Choose source' datatype='boolean' name='[Calculation_388998464045072394]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [source] OR [Parameters].[Parameter 1]=&quot;all&quot;' />
            </column>
            <column-instance column='[score]' derivation='Avg' name='[avg:score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_388998464045072394]' derivation='None' name='[none:Calculation_388998464045072394:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiments - Split 1]' derivation='None' name='[none:sentiments - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[score]' role='measure' type='quantitative' />
            <column caption='sentiment-name' datatype='string' name='[sentiments - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[sentiments]'>
              <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( SPLIT( [sentiments], &quot;[&quot;, 2 ), &quot;{&quot;, 2 ), &quot;&quot;&quot;&quot;, 4 ) )' />
            </column>
            <column datatype='string' name='[sentiments]' role='dimension' type='nominal' />
            <column datatype='string' name='[source]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464045072394:nk]'>
            <groupfilter function='member' level='[none:Calculation_388998464045072394:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:sentiments - Split 1:nk]' />
              <groupfilter function='member' level='[none:sentiments - Split 1:nk]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:source:nk]' />
              <groupfilter function='member' level='[none:source:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]</column>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464045072394:nk]</column>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]' value='98' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[avg:score:qk]</rows>
        <cols>([federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk] / [federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk])</cols>
      </table>
      <simple-id uuid='{762BE19A-1357-4315-B623-6694ECE616E6}' />
    </worksheet>
    <worksheet name='Average score by user'>
      <table>
        <view>
          <datasources>
            <datasource caption='meme (localhost)' name='federated.0p82x6i1mcx5ax19mse3b0aupcx3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose source' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;all&quot;'>
              <calculation class='tableau' formula='&quot;all&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0p82x6i1mcx5ax19mse3b0aupcx3'>
            <column caption='Choose source' datatype='boolean' name='[Calculation_388998464045072394]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [source] OR [Parameters].[Parameter 1]=&quot;all&quot;' />
            </column>
            <column datatype='string' name='[author]' role='dimension' type='nominal' />
            <column-instance column='[score]' derivation='Avg' name='[avg:score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_388998464045072394]' derivation='None' name='[none:Calculation_388998464045072394:nk]' pivot='key' type='nominal' />
            <column-instance column='[author]' derivation='None' name='[none:author:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[score]' role='measure' type='quantitative' />
            <column datatype='string' name='[source]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464045072394:nk]'>
            <groupfilter function='member' level='[none:Calculation_388998464045072394:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:source:nk]' />
              <groupfilter function='member' level='[none:source:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:author:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[avg:score:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]</column>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464045072394:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='22' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk] / [federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:author:nk])</rows>
        <cols>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[avg:score:qk]</cols>
      </table>
      <simple-id uuid='{5F8AC81A-A5F7-4DE1-AD43-6B6E390F011C}' />
    </worksheet>
    <worksheet name='Average scores'>
      <table>
        <view>
          <datasources>
            <datasource caption='meme (localhost)' name='federated.0p82x6i1mcx5ax19mse3b0aupcx3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column _.fcp.ParameterDefaultValues.true...source-field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[cluster]' caption='Choose cluster' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;-1&quot;'>
              <calculation class='tableau' formula='&quot;-1&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0p82x6i1mcx5ax19mse3b0aupcx3'>
            <column caption='Choose cluster' datatype='boolean' name='[Calculation_388998464090005518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 3] = [cluster]' />
            </column>
            <column-instance column='[score]' derivation='Avg' name='[avg:score:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[cluster]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_388998464090005518]' derivation='None' name='[none:Calculation_388998464090005518:nk]' pivot='key' type='nominal' />
            <column-instance column='[cluster]' derivation='None' name='[none:cluster:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiments - Split 1]' derivation='None' name='[none:sentiments - Split 1:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[score]' role='measure' type='quantitative' />
            <column caption='sentiment-name' datatype='string' name='[sentiments - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[sentiments]'>
              <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( SPLIT( [sentiments], &quot;[&quot;, 2 ), &quot;{&quot;, 2 ), &quot;&quot;&quot;&quot;, 4 ) )' />
            </column>
            <column datatype='string' name='[sentiments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464090005518:nk]'>
            <groupfilter function='member' level='[none:Calculation_388998464090005518:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:sentiments - Split 1:nk]' />
              <groupfilter function='member' level='[none:sentiments - Split 1:nk]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464090005518:nk]</column>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[avg:score:qk]</rows>
        <cols>([federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:cluster:nk] / [federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk])</cols>
      </table>
      <simple-id uuid='{7722585A-3BE2-4A74-85FD-2899272ED5A0}' />
    </worksheet>
    <worksheet name='Average sentiment score by type'>
      <table>
        <view>
          <datasources>
            <datasource caption='meme (localhost)' name='federated.0p82x6i1mcx5ax19mse3b0aupcx3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose source' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;all&quot;'>
              <calculation class='tableau' formula='&quot;all&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0p82x6i1mcx5ax19mse3b0aupcx3'>
            <column caption='Choose source' datatype='boolean' name='[Calculation_388998464045072394]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [source] OR [Parameters].[Parameter 1]=&quot;all&quot;' />
            </column>
            <column-instance column='[sentiments - Split 2]' derivation='Avg' name='[avg:sentiments - Split 2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_388998464045072394]' derivation='None' name='[none:Calculation_388998464045072394:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiments - Split 1]' derivation='None' name='[none:sentiments - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='sentiment-name' datatype='string' name='[sentiments - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[sentiments]'>
              <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( SPLIT( [sentiments], &quot;[&quot;, 2 ), &quot;{&quot;, 2 ), &quot;&quot;&quot;&quot;, 4 ) )' />
            </column>
            <column aggregation='CountD' caption='sentiments-score' datatype='real' datatype-customized='true' name='[sentiments - Split 2]' role='measure' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[sentiments]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( SPLIT( SPLIT( SPLIT( SPLIT( [sentiments], &quot;[&quot;, 2 ), &quot;{&quot;, 2 ), &quot;&quot;&quot;&quot;, 7 ), &quot;:&quot;, 2 ), &quot;}&quot;, 1 ) ))' />
            </column>
            <column datatype='string' name='[sentiments]' role='dimension' type='nominal' />
            <column datatype='string' name='[source]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464045072394:nk]'>
            <groupfilter function='member' level='[none:Calculation_388998464045072394:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:sentiments - Split 1:nk]' />
              <groupfilter function='member' level='[none:sentiments - Split 1:nk]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:source:nk]' />
              <groupfilter function='member' level='[none:source:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464045072394:nk]</column>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]</column>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]' value='159' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[avg:sentiments - Split 2:qk]</rows>
        <cols>([federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk] / [federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk])</cols>
      </table>
      <simple-id uuid='{4AAA0258-62C8-455F-AE42-47B2ECC6534D}' />
    </worksheet>
    <worksheet name='Caught image'>
      <table>
        <view>
          <datasources>
            <datasource caption='meme (localhost)' name='federated.0p82x6i1mcx5ax19mse3b0aupcx3' />
          </datasources>
          <datasource-dependencies datasource='federated.0p82x6i1mcx5ax19mse3b0aupcx3'>
            <column datatype='string' name='[author]' role='dimension' type='nominal' />
            <column datatype='string' name='[cluster]' role='dimension' type='nominal' />
            <column datatype='string' name='[description]' role='dimension' type='nominal' />
            <column datatype='string' name='[global_id]' role='dimension' type='nominal' />
            <column-instance column='[author]' derivation='None' name='[none:author:nk]' pivot='key' type='nominal' />
            <column-instance column='[cluster]' derivation='None' name='[none:cluster:nk]' pivot='key' type='nominal' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[global_id]' derivation='None' name='[none:global_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiments - Split 1]' derivation='None' name='[none:sentiments - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column-instance column='[url]' derivation='None' name='[none:url:nk]' pivot='key' type='nominal' />
            <column caption='sentiment-name' datatype='string' name='[sentiments - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[sentiments]'>
              <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( SPLIT( [sentiments], &quot;[&quot;, 2 ), &quot;{&quot;, 2 ), &quot;&quot;&quot;&quot;, 4 ) )' />
            </column>
            <column datatype='string' name='[sentiments]' role='dimension' type='nominal' />
            <column datatype='string' name='[source]' role='dimension' type='nominal' />
            <column datatype='string' name='[url]' role='dimension' semantic-role='[URL]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:author:nk]'>
            <groupfilter function='member' level='[none:author:nk]' member='&quot;przyklad12&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:cluster:nk]'>
            <groupfilter function='member' level='[none:cluster:nk]' member='&quot;-1&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:sentiments - Split 1:nk]' />
              <groupfilter function='member' level='[none:sentiments - Split 1:nk]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]'>
            <groupfilter function='member' level='[none:source:nk]' member='&quot;imgur&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</column>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]</column>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:cluster:nk]</column>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:author:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:author:nk]' value='323' />
            <format attr='width' value='217' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:url:nk]' value='412' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:description:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:global_id:nk] / ([federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:url:nk] / [federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:author:nk]))</rows>
        <cols />
      </table>
      <simple-id uuid='{30619A0D-9B9E-4EDE-902E-24F4C85CC623}' />
    </worksheet>
    <worksheet name='Cluster example image'>
      <table>
        <view>
          <datasources>
            <datasource caption='meme (localhost)' name='federated.0p82x6i1mcx5ax19mse3b0aupcx3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose sentiment' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;positive&quot;'>
              <calculation class='tableau' formula='&quot;positive&quot;' />
            </column>
            <column _.fcp.ParameterDefaultValues.true...source-field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[cluster]' caption='Choose cluster' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;-1&quot;'>
              <calculation class='tableau' formula='&quot;-1&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0p82x6i1mcx5ax19mse3b0aupcx3'>
            <column caption='Empty' datatype='string' name='[Calculation_388998464022405122]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Choose sentiment' datatype='boolean' name='[Calculation_388998464064802829]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2] = [sentiments - Split 1]' />
            </column>
            <column caption='Choose cluster' datatype='boolean' name='[Calculation_388998464090005518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 3] = [cluster]' />
            </column>
            <column caption='Take last' datatype='boolean' name='[Calculation_388998464099541007]' role='measure' type='nominal'>
              <calculation class='tableau' formula='INDEX()=SIZE()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[cluster]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_388998464022405122]' derivation='None' name='[none:Calculation_388998464022405122:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_388998464064802829]' derivation='None' name='[none:Calculation_388998464064802829:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_388998464090005518]' derivation='None' name='[none:Calculation_388998464090005518:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiments - Split 1]' derivation='None' name='[none:sentiments - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[url]' derivation='None' name='[none:url:nk]' pivot='key' type='nominal' />
            <column caption='sentiment-name' datatype='string' name='[sentiments - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[sentiments]'>
              <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( SPLIT( [sentiments], &quot;[&quot;, 2 ), &quot;{&quot;, 2 ), &quot;&quot;&quot;&quot;, 4 ) )' />
            </column>
            <column datatype='string' name='[sentiments]' role='dimension' type='nominal' />
            <column datatype='string' name='[url]' role='dimension' semantic-role='[URL]' type='nominal' />
            <column-instance column='[Calculation_388998464099541007]' derivation='User' name='[usr:Calculation_388998464099541007:nk:4]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464064802829:nk]'>
            <groupfilter function='member' level='[none:Calculation_388998464064802829:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464090005518:nk]'>
            <groupfilter function='member' level='[none:Calculation_388998464090005518:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:sentiments - Split 1:nk]' />
              <groupfilter function='member' level='[none:sentiments - Split 1:nk]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[usr:Calculation_388998464099541007:nk:4]'>
            <groupfilter function='member' level='[usr:Calculation_388998464099541007:nk:4]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464064802829:nk]</column>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464090005518:nk]</column>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[usr:Calculation_388998464099541007:nk:4]</column>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='5' />
            <format attr='height' value='58' />
            <format attr='height' field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:url:nk]' value='349' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='36' />
            <format attr='width' field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:url:nk]' value='300' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464022405122:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:url:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{652E19C1-3129-47DD-AAAD-A6F8EC3CB12D}' />
    </worksheet>
    <worksheet name='Image_counts'>
      <table>
        <view>
          <datasources>
            <datasource caption='meme (localhost)' name='federated.0p82x6i1mcx5ax19mse3b0aupcx3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose source' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;all&quot;'>
              <calculation class='tableau' formula='&quot;all&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0p82x6i1mcx5ax19mse3b0aupcx3'>
            <column caption='Choose source' datatype='boolean' name='[Calculation_388998464045072394]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] = [source] OR [Parameters].[Parameter 1]=&quot;all&quot;' />
            </column>
            <column-instance column='[global_id]' derivation='Count' name='[cnt:global_id:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[global_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_388998464045072394]' derivation='None' name='[none:Calculation_388998464045072394:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiments - Split 1]' derivation='None' name='[none:sentiments - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[source]' derivation='None' name='[none:source:nk]' pivot='key' type='nominal' />
            <column caption='sentiment-name' datatype='string' name='[sentiments - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[sentiments]'>
              <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( SPLIT( [sentiments], &quot;[&quot;, 2 ), &quot;{&quot;, 2 ), &quot;&quot;&quot;&quot;, 4 ) )' />
            </column>
            <column datatype='string' name='[sentiments]' role='dimension' type='nominal' />
            <column datatype='string' name='[source]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464045072394:nk]'>
            <groupfilter function='member' level='[none:Calculation_388998464045072394:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:sentiments - Split 1:nk]' />
              <groupfilter function='member' level='[none:sentiments - Split 1:nk]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:source:nk]' />
              <groupfilter function='member' level='[none:source:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]</column>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464045072394:nk]</column>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='145' />
            <format attr='height' field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]' value='35' />
            <format attr='font-size' field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]' value='18' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[cnt:global_id:ok]' value='92' />
            <format attr='width' field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]' value='132' />
            <format attr='font-size' data-class='subtotal' field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]' value='12' />
            <format attr='width' field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]' value='76' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-size' scope='rows' value='26' />
            <format attr='font-size' scope='cols' value='20' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]' value='12' />
            <format attr='font-size' field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[cnt:global_id:ok]' value='12' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[cnt:global_id:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk] / [federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{634F7AAA-5D44-4E2C-80C6-8BD83FDF6891}' />
    </worksheet>
    <worksheet name='Sentiment color'>
      <table>
        <view>
          <datasources>
            <datasource caption='meme (localhost)' name='federated.0p82x6i1mcx5ax19mse3b0aupcx3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose sentiment' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;positive&quot;'>
              <calculation class='tableau' formula='&quot;positive&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0p82x6i1mcx5ax19mse3b0aupcx3'>
            <column caption='A seven' datatype='integer' name='[Calculation_388998464062742540]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='7' />
            </column>
            <column caption='Choose sentiment' datatype='boolean' name='[Calculation_388998464064802829]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2] = [sentiments - Split 1]' />
            </column>
            <column-instance column='[Calculation_388998464062742540]' derivation='Min' name='[min:Calculation_388998464062742540:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_388998464064802829]' derivation='None' name='[none:Calculation_388998464064802829:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiments - Split 1]' derivation='None' name='[none:sentiments - Split 1:nk]' pivot='key' type='nominal' />
            <column caption='sentiment-name' datatype='string' name='[sentiments - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[sentiments]'>
              <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( SPLIT( [sentiments], &quot;[&quot;, 2 ), &quot;{&quot;, 2 ), &quot;&quot;&quot;&quot;, 4 ) )' />
            </column>
            <column datatype='string' name='[sentiments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464064802829:nk]'>
            <groupfilter function='member' level='[none:Calculation_388998464064802829:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:sentiments - Split 1:nk]' />
              <groupfilter function='member' level='[none:sentiments - Split 1:nk]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464064802829:nk]</column>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[min:Calculation_388998464062742540:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[min:Calculation_388998464062742540:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='685' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]' />
              <lod column='[Parameters].[Parameter 2]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[min:Calculation_388998464062742540:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{43FEDA18-601B-4E45-9337-6E0EF3538D35}' />
    </worksheet>
    <worksheet name='Sentiment counts'>
      <table>
        <view>
          <datasources>
            <datasource caption='meme (localhost)' name='federated.0p82x6i1mcx5ax19mse3b0aupcx3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column _.fcp.ParameterDefaultValues.true...source-field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[cluster]' caption='Choose cluster' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;-1&quot;'>
              <calculation class='tableau' formula='&quot;-1&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0p82x6i1mcx5ax19mse3b0aupcx3'>
            <column caption='Choose cluster' datatype='boolean' name='[Calculation_388998464090005518]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 3] = [cluster]' />
            </column>
            <column datatype='string' name='[cluster]' role='dimension' type='nominal' />
            <column-instance column='[global_id]' derivation='Count' name='[cnt:global_id:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[global_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_388998464090005518]' derivation='None' name='[none:Calculation_388998464090005518:nk]' pivot='key' type='nominal' />
            <column-instance column='[cluster]' derivation='None' name='[none:cluster:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiments - Split 1]' derivation='None' name='[none:sentiments - Split 1:nk]' pivot='key' type='nominal' />
            <column caption='sentiment-name' datatype='string' name='[sentiments - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[sentiments]'>
              <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( SPLIT( [sentiments], &quot;[&quot;, 2 ), &quot;{&quot;, 2 ), &quot;&quot;&quot;&quot;, 4 ) )' />
            </column>
            <column datatype='string' name='[sentiments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464090005518:nk]'>
            <groupfilter function='member' level='[none:Calculation_388998464090005518:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:sentiments - Split 1:nk]' />
              <groupfilter function='member' level='[none:sentiments - Split 1:nk]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464090005518:nk]</column>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' value='12' />
            <format attr='width' field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:cluster:nk]' value='117' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]' value='116' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-size' value='12' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[cnt:global_id:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</rows>
        <cols>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:cluster:nk]</cols>
      </table>
      <simple-id uuid='{A0F2BB66-6213-400B-9482-CC34772E2F30}' />
    </worksheet>
    <worksheet name='Sentiment distribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='meme (localhost)' name='federated.0p82x6i1mcx5ax19mse3b0aupcx3' />
          </datasources>
          <datasource-dependencies datasource='federated.0p82x6i1mcx5ax19mse3b0aupcx3'>
            <column-instance column='[sentiments - Split 2]' derivation='Avg' name='[avg:sentiments - Split 2:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[cluster]' role='dimension' type='nominal' />
            <column-instance column='[cluster]' derivation='None' name='[none:cluster:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentiments - Split 1]' derivation='None' name='[none:sentiments - Split 1:nk]' pivot='key' type='nominal' />
            <column caption='sentiment-name' datatype='string' name='[sentiments - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[sentiments]'>
              <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( SPLIT( [sentiments], &quot;[&quot;, 2 ), &quot;{&quot;, 2 ), &quot;&quot;&quot;&quot;, 4 ) )' />
            </column>
            <column aggregation='CountD' caption='sentiments-score' datatype='real' datatype-customized='true' name='[sentiments - Split 2]' role='measure' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[sentiments]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( SPLIT( SPLIT( SPLIT( SPLIT( [sentiments], &quot;[&quot;, 2 ), &quot;{&quot;, 2 ), &quot;&quot;&quot;&quot;, 7 ), &quot;:&quot;, 2 ), &quot;}&quot;, 1 ) ))' />
            </column>
            <column datatype='string' name='[sentiments]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:sentiments - Split 1:nk]' />
              <groupfilter function='member' level='[none:sentiments - Split 1:nk]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline0' value='modern' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='fill-color' id='refline0' value='#f0f0f0d9' />
            <format attr='palette' id='refline0' value='bp_brightblue' />
            <format attr='opacity' id='refline0' value='103' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]' />
              <lod column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[avg:sentiments - Split 2:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[avg:sentiments - Split 2:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[avg:sentiments - Split 2:qk]</rows>
        <cols>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:cluster:nk]</cols>
      </table>
      <simple-id uuid='{74AA0ED0-5812-43E9-9EA5-DC4FA8B432E2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Cluster analysis'>
      <style />
      <size maxheight='1168' maxwidth='1824' minheight='1168' minwidth='1824' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Choose sentiment' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;positive&quot;'>
          <calculation class='tableau' formula='&quot;positive&quot;' />
          <members>
            <member value='&quot;negative&quot;' />
            <member value='&quot;neutral&quot;' />
            <member value='&quot;positive&quot;' />
          </members>
        </column>
        <column _.fcp.ParameterDefaultValues.true...source-field='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[cluster]' caption='Choose cluster' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;-1&quot;'>
          <calculation class='tableau' formula='&quot;-1&quot;' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0' />
        <zone h='55069' id='3' name='Sentiment color' show-title='false' w='37884' x='59046' y='52304' />
        <zone h='15500' id='4' mode='list' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='84000' y='22125' />
        <zone h='43548' id='5' name='Cluster example image' show-title='false' w='17215' x='69956' y='61866' />
        <zone h='14631' id='6' name='Sentiment counts' show-title='false' w='14419' x='83443' y='35369' />
        <zone h='8986' id='8' name='Sentiment distribution' pane-specification-id='0' param='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]' show-title='false' type-v2='color' w='7785' x='50493' y='57488' />
        <zone h='47005' id='9' name='Average scores' show-title='false' w='48355' x='1480' y='56106'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='6000' id='10' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='16000' x='83800' y='15375' />
        <zone forceUpdate='true' h='4032' id='11' type-v2='text' w='18969' x='71656' y='53456'>
          <formatted-text>
            <run bold='true' fontsize='18'>EXAMPLE IMAGE</run>
          </formatted-text>
        </zone>
        <zone h='44521' id='7' name='Sentiment distribution' show-title='false' w='81908' x='987' y='7363'>
          <layout-cache cell-count-w='2' minheight='145' non-cell-size-w='64' type-h='scalable' type-w='cell' />
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='8390' id='30' type-v2='text' w='48136' x='987' y='514'>
          <formatted-text>
            <run bold='true' fontsize='48'>ANALYSIS BY CLUSTER</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1700' minheight='1700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='32' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98630' id='31' param='vert' type-v2='layout-flow' w='99122' x='439' y='685'>
                <zone forceUpdate='true' h='8390' id='30' type-v2='text' w='48136' x='987' y='514'>
                  <formatted-text>
                    <run bold='true' fontsize='48'>ANALYSIS BY CLUSTER</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44521' id='7' is-fixed='true' name='Sentiment distribution' show-title='false' w='81908' x='987' y='7363'>
                  <layout-cache cell-count-w='2' minheight='145' non-cell-size-w='64' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8986' id='8' name='Sentiment distribution' pane-specification-id='0' param='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]' show-title='false' type-v2='color' w='7785' x='50493' y='57488'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6000' id='10' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='16000' x='83800' y='15375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15500' id='4' mode='list' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='84000' y='22125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='171' h='14631' id='6' is-fixed='true' name='Sentiment counts' show-title='false' w='14419' x='83443' y='35369'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55069' id='3' is-fixed='true' name='Sentiment color' show-title='false' w='37884' x='59046' y='52304'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='4032' id='11' type-v2='text' w='18969' x='71656' y='53456'>
                  <formatted-text>
                    <run bold='true' fontsize='18'>EXAMPLE IMAGE</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47005' id='9' is-fixed='true' name='Average scores' show-title='false' w='48355' x='1480' y='56106'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43548' id='5' is-fixed='true' name='Cluster example image' show-title='false' w='17215' x='69956' y='61866'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6AE5F77F-BAE8-434B-94D0-5ED71A41448D}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Source analysis'>
      <style />
      <size maxheight='1168' maxwidth='1824' minheight='1168' minwidth='1824' preset-index='2' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Choose source' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;all&quot;'>
          <calculation class='tableau' formula='&quot;all&quot;' />
          <members>
            <member value='&quot;all&quot;' />
            <member value='&quot;imgur&quot;' />
            <member value='&quot;reddit&quot;' />
            <member value='&quot;tumblr&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0' />
        <zone h='80300' id='10' name='Average score by user' w='45724' x='56469' y='26613'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='11979' id='11' name='Average score by user' pane-specification-id='0' param='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]' type-v2='color' w='16105' x='82943' y='8984' />
        <zone h='5990' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='16032' x='82650' y='2604' />
        <zone h='20805' id='12' name='Image_counts' show-title='false' w='20175' x='57346' y='4024' />
        <zone h='97688' id='13' name='Average score by sentiment' w='22971' x='1206' y='8048'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='12327' id='14' name='Average score by sentiment' pane-specification-id='0' param='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]' show-title='false' type-v2='color' w='8333' x='51919' y='91590' />
        <zone h='97774' id='19' name='Average sentiment score by type' w='24890' x='26700' y='7791'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='6592' id='29' param='[com.tableau.extensions.samples.uinamespace].[0.6.0].[https://difemaro.github.io/Extensiones/Samples/AutoRefresh_seconds/AutoRefresh.html]' type-v2='dashboard-object' w='21656' x='82292' y='19435'>
          <add-in add-in-id='com.tableau.extensions.samples.uinamespace' extension-url='https://difemaro.github.io/Extensiones/Samples/AutoRefresh_seconds/AutoRefresh.html' extension-version='0.6.0' instance-id='06EA9E301494490E93C6C2DEAF3D6AAC'>
            <instance-settings>
              <setting key='intervalkey' value='15' />
              <setting key='selectedDatasources' value='[&quot;federated.0p82x6i1mcx5ax19mse3b0aupcx3&quot;]' />
            </instance-settings>
            <type-settings>
              <dashboard />
            </type-settings>
          </add-in>
        </zone>
        <zone forceUpdate='true' h='8390' id='34' type-v2='text' w='48136' x='1809' y='771'>
          <formatted-text>
            <run bold='true' fontsize='48'>ANALYSIS BY SOURCE</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='36' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98630' id='35' param='vert' type-v2='layout-flow' w='99122' x='439' y='685'>
                <zone forceUpdate='true' h='8390' id='34' type-v2='text' w='48136' x='1809' y='771'>
                  <formatted-text>
                    <run bold='true' fontsize='48'>ANALYSIS BY SOURCE</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5990' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='16032' x='82650' y='2604'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='243' h='20805' id='12' is-fixed='true' name='Image_counts' show-title='false' w='20175' x='57346' y='4024'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97774' id='19' is-fixed='true' name='Average sentiment score by type' w='24890' x='26700' y='7791'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97688' id='13' is-fixed='true' name='Average score by sentiment' w='22971' x='1206' y='8048'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12327' id='14' name='Average score by sentiment' pane-specification-id='0' param='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]' show-title='false' type-v2='color' w='8333' x='51919' y='91590'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='6592' id='29' param='[com.tableau.extensions.samples.uinamespace].[0.6.0].[https://difemaro.github.io/Extensiones/Samples/AutoRefresh_seconds/AutoRefresh.html]' type-v2='dashboard-object' w='21656' x='82292' y='19435'>
                  <add-in add-in-id='com.tableau.extensions.samples.uinamespace' extension-url='https://difemaro.github.io/Extensiones/Samples/AutoRefresh_seconds/AutoRefresh.html' extension-version='0.6.0' instance-id='06EA9E301494490E93C6C2DEAF3D6AAC'>
                    <instance-settings>
                      <setting key='intervalkey' value='15' />
                      <setting key='selectedDatasources' value='[&quot;federated.0p82x6i1mcx5ax19mse3b0aupcx3&quot;]' />
                    </instance-settings>
                    <type-settings>
                      <dashboard />
                    </type-settings>
                  </add-in>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='80300' id='10' is-fixed='true' name='Average score by user' w='45724' x='56469' y='26613'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11979' id='11' name='Average score by user' pane-specification-id='0' param='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]' type-v2='color' w='16105' x='82943' y='8984'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8BD6F00A-6652-4463-9FCC-847F97607C4B}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Average sentiment score by type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[attr:source:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464045072394:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:author:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:cluster:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 2:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A8333270-CCB4-40CC-BE07-5A46E0D00DDC}' />
    </window>
    <window class='worksheet' name='Average score by sentiment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464045072394:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95B1CE77-AC27-46DE-A92B-95D08E7DFEC2}' />
    </window>
    <window class='worksheet' name='Average score by user'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[max:url:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998463994576896:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464045072394:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:author:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:entities:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:text:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:url:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F52FE57C-20F6-4885-AC8E-19D4806AC288}' />
    </window>
    <window class='worksheet' name='Image_counts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[attr:Calculation_388998464022405122:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[cnt:global_id:ok]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464022405122:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464045072394:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:description:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:global_id:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:url:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE279D21-518C-4913-A0B0-B96A533596B5}' />
    </window>
    <window class='dashboard' maximized='true' name='Source analysis'>
      <viewpoints>
        <viewpoint name='Average score by sentiment'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Average score by user'>
          <highlight>
            <color-one-way>
              <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Average sentiment score by type'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Image_counts' />
      </viewpoints>
      <active id='20' />
      <simple-id uuid='{5FF33BCD-4D13-44E6-B3C6-B38A62D7ABFE}' />
    </window>
    <window class='dashboard' name='Cluster analysis'>
      <viewpoints>
        <viewpoint name='Average scores'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Cluster example image' />
        <viewpoint name='Sentiment color' />
        <viewpoint name='Sentiment counts' />
        <viewpoint name='Sentiment distribution'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='7' />
      <simple-id uuid='{D13761F0-73B3-4C7E-9D34-FFE896D3C59F}' />
    </window>
    <window class='worksheet' name='Sentiment color'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464064802829:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:entities:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{51655AF4-D467-4DA4-A97C-25198397A23C}' />
    </window>
    <window class='worksheet' name='Cluster example image'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' size='9' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' size='9' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[min:url:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464022405122:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464064802829:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464090005518:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_926052719828213760:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:cluster:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:url:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[usr:Calculation_388998464027385861:ok]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[usr:Calculation_388998464028057606:ok]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[usr:Calculation_388998464099541007:nk:4]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[usr:Calculation_388998464099541007:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{846D96A1-376A-4577-85FB-2CEFC95D5293}' />
    </window>
    <window class='worksheet' name='Average scores'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464090005518:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8EAB9AC1-A9D9-42E3-86C3-810455ABF000}' />
    </window>
    <window class='worksheet' name='Sentiment distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464090005518:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:cluster:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA2C87A5-F138-47F7-A955-FE72BD30284C}' />
    </window>
    <window class='worksheet' name='Sentiment counts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[cnt:global_id:ok]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:Calculation_388998464090005518:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:cluster:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:global_id:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4BEF4CC6-9986-48EB-85BB-CB006A4F949B}' />
    </window>
    <window class='worksheet' name='Caught image'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[cnt:global_id:ok]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:author:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:cluster:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:description:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:global_id:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:sentiments - Split 1:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:source:nk]</field>
            <field>[federated.0p82x6i1mcx5ax19mse3b0aupcx3].[none:url:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF9A1712-18E3-4ADF-B828-826A52583FD8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average score by sentiment' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average score by user' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average scores' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAVVUlEQVR4nO3deXyU9Z3A8c/zzJ37IAlJCCEHSSBAuEEqKooHasVWqa3HaqvW1le327qu
      3e22r9e+tK92q661FZFWXI+6aj3aWkVBAaEeHHIGgUBCTpKQTCaTa+6Z59k/EIxILLXAJPy+
      7/8yzzPz/J5nns88zzOZSTTTNE2EUJCmaZoe70EIEU8SgFCaBCCUJgEIpUkAQmlKBODxeOju
      7o73MMQwpEQAhmEg7/aKE1EiACGGIgEMEg0O0N3TTyzeAzkBT90b/OZXL9MSPJNLNQj7++j2
      DgzLbXIqSACDNKx7gjt++AidX/D+vS0fsXF7Had+Hw2zb81aBsZOIsd5yh/8mJD3IFs+3I3H
      f/QWPx++cD/f+sFy3KdvsQAYsQF2b95IQ6fvNC/p0ySAU+jQxpf59ZNv03uqH9hfy+Y9Vmaf
      U4r9VD/2IH0Na1n+uxepO/Z+gYPiuVdy+00XkXwalwsQi3Twh2WPsH7PF335+WKsZ3Rpw4Vp
      0N+6g6d++zQfHQ6ROGY2//yjWz81S8vGF/n1ym7uue8OsjWNfX/6Bb9vmcE931+IXv8uy5a/
      TL03TELWeK65/WayWlez/LkPONRr457btpE15cvcc8sibN27eOW5l9ja2EPy2Blcc8PXmVWY
      TM0rD/DH/ipunu9g2bK3mLbkTq6bV3CiweLe/h4Hs2dz2+jPPl2mEaVlxxv8/oXVNPVEySyb
      y5LrrmVqQRLehs28+PQf2NnmI714Nktu+jrT8pNoWvMAu8lhy8pNdDGKq799F7ODa/nZ0pUc
      POjnoR/fRvaoWfzgoTuwdNaw/gONOQun4XnvOX6zso15VTrvb6ih1zGeb922gJrXXmJLrZvi
      Rd/ne9dOxWUEqV61gmde302/6WDSxf/ENxfPILlvG/f/8nmy5y/Gt+1VqlsDTLr823zzAivP
      PPgYmxta2LXsp3zwXAJfvvt3XFU+eE3bePX+pezNW0h537u8s7MFV/ki/uXOr5LvClO98kme
      fXMX3mAU16gyvnbHd5g3Lhld+/xdQckjQNRbzaP3LiU08zYeWPYI//6NaWihT88T7vfQ1HyY
      yMc/B7pbaTrcS4x2Vj7+JL1TvsOjjy3lp9+cSU9HiIpzb+Q7189jzKQruX/FCh78/mLSrW5e
      efxJQlU389DS33DdxF5eeOpFmr0R/J5WDu7dyDPPvkNW1VzKcpNOPNhwO+s3NDL7svmknuDZ
      ioX8rHz+eRLOvZ1fL/8N3764gpDXQyTSyrMPr8By3p08vPxRvjqulWefeInGfgNvh5tA5gJ+
      /OCvuTavnddf+yvR6dfwk+9dQUnZXO76+QoeeegOSoBQn5umFjdRINTXRWNtLUkzb+Ln/3MP
      s2NbeHqVm0vvvJcHv3cuO199iWpvjI73VvDoep1b71vKo7/8LtENj/DUO63EogM019XR0O3g
      2n/9b37x7Sq2vPoiu32TuP0ndzGnqICv3nkfjz9+/M4PEMbb1syePa1MWnI3D/3qNtj0Cm/t
      7AVCkDyZO+99mN8uf5jritp56nd/piXymc31GUoeATq2/ZVdkVL+a9EUUmyQUjYdgNqTureL
      rKwUOqrX8EZ+kJnT5nBFqeuEc4a6d7Bp52EyXGt5on4dvq4Omg/7GBjwAzH6ekyqbv4uV04a
      jaad+KWqv7mWXYFsri8+cSCabiEj3cFft7zDmnSYN3M2RQkWzIMvsn5/HxO2rWLFXvB1e+jq
      sNDTEyIxxUXV9AISgMQEG7GeCDFObmfQkguZXJqFAwu5mS5yxk8mP9UBuaNJ0w5iml62vFuN
      tz+Xtc8vZy1w2OeDhkaCVWC1O6mYNoecJOhPSMBihImd6Arb72HLX1exubabpFFlXLT4SBFj
      quZSlpUIJOAEIpEIkMXYsU7efu0pVvaH8bf1ExroYiAAf+ucUckABnwDmAmppNm+yL3TOOem
      H+LcupmN657l9efCzL/1p9w0d/Rn5jT6vQRcmVTOnM/UXB04j0XONIqzE9mLTtq4CqYWDb3z
      m2aQxgP7cYwpJz/xxFe/ut3FpbfcQ9bWbWxe9b+8+nImX7nldi41vPiTspg8Zz4T0zTgPK5M
      SGdctp3WL7LaJ81Pb0+I1MKpzD+vGA3g/AWkZBXgZMfJP4w9kbEVM3DkhrA500i3fc7vcfp2
      s+LhxwlOWcwlX8oj3OCn7p2TW4ySp0BFE6vI6D3AlvoeIoZBeKCHgfCn59EtFrRYhFDUJBLo
      pWcgBCYQDdAfdjFlwbXcfe8vuPO8NFa9sgYv4HA4IOLHFzIwDBNrXjn5lgD9USvjJ05m8sRy
      8jKTsegAOlarFd0y9ElqrL+bj/Z3UlY1gUTniZ8q0wgRNNOYfdn1/Oi+B/hGaRdrNnxIV34l
      RXTRF06hrHIykyaWkZuRyOcsDt3uQo+ECYaCmIaB8fduWAAyKa/Ioa+9FVdBGZOmTKaieAzJ
      js/f1TTNjstmEAgGiRgGhu5k9LgKqqqqmFheSPLnvVi17We3exQXXXsxMyaWkJHwycz+joNU
      76ujJwimEaRhdzX17d5jp7ZKHgHspedy4+X7eXXFUpqLc3BpicxZcv2njpajisqZkLiZ3694
      mpL0ZLpbezEtQMRL9YbVHOiJ4bCZdNX7mDyjnEQgYep8Jq37P5587AkqK2ewaO4Erl48keff
      foZljaWku6xEk8Zy1cXzTmqcfZ5amnqcXFaUN+QTFYv2sfn152gxU3BaDTraE6mYX0RSdjlf
      W1TBn197jEcPlJLhtKBnFLPwgnOHXF5CwUymjd7CW88/RlPxVC69fsHJbtJBEpl66bXMOvgE
      y3+1jPJx6diwkFd5LhcWD30v3ZLDvHNK+Mv6P/C71rF86YpvMTX3JBeZN5GZuat5aenj1I5N
      Jdx+iAhH3lBoWfMo96yCH//sIebltvPkf9xN9Cv/zr/deiEAmgrfCHO73ei6TmZm5rHbYsFe
      6g/U4vFHcSTlUDahCLqbqOuIUTGpGEcsQHt9LU2eIK60HDKsfXjNLCpKRxH2tFPf2I4vYmBx
      JFNUXkZWog3MCO6GA9R39mPPKGBCUS6WSB8tDQ24+0NoVheZuQUUjE4j0HaAQ9E0SsaOxmk5
      8bgPrHyQZ5umctcdC0kbYh7TiOE93EBzm4dgxMSenMW44kLSXRaigR6aDtbT5Quj2xLIyisk
      PzuViOcgZJeSCPQ076UtkklJSQ52I4q3vZ7G1m5i1iwmTC9B62ygzq1RUTmOqLuJ2o4YEyYV
      4yBCZ10NfSnjKc12QsjN3gM95JWPJ81u0ne4jrpmDyFDw5mcSeG4QtJt/eyvaSG1qIrcZIgO
      tFHT0E9+aTnpTpNA32Ea6lvoC8HYytnkfeq91wCtNbX4Uksoy00E+qnb2YCjsIKCdAvdzQeo
      bevFmphJQY4Dj8egYPw4NHcNNV1QVFpBuiPAwZ17MLOLGDcmE7umacoGMOxF23n8P+8l9Yb7
      WTIlmb/xbp74AjRN05Q8BRoRwj5ypy1h+gTZ+U8nOQIIZcmX4oXyJAChNAlAKE0ugpVhEgv3
      ceCDdaz96DAlsy5h/vQiEm260hfZcgRQhRGmacdGtngz+No3roHGjeyo7cA4698C+XwSgCKM
      YB8t3giTp04hKyOTaRPG4O7oIBxTuwAJQBGxcJgIkJyUiKZZSEtLIhgMEot9sU/8nC3kGkAR
      pmlis9qwWo885Ta7HYvFPPIBP4XJEUARuq4TiUQIh4587DUQCGCaxpAfxVaFBKAIi8tFggae
      nh5iRhh3Zy8JiUlYrGoHIKdAitDsqUwoy+G199/F9BbQ1NDH1AXzcHzeFwQUIAEoQye9aBqX
      m3Z2HOxi6vyFlI1OUvp3ACAfhhMKkw/DCeUNeQrU2dmJYZwd7xH7fD40Tfv4LwgI8YkhA7Db
      7WfNX1QOhUJomnbkS+tCDDJkAGlpaWdyHKdVNBpF13XS09PjPRQxzMg1gFCaBCCUJgEIpUkA
      QmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCU
      JgEIpUkAQmkSgFCa/GnEEah//0+IhTrjOgZnzlU4c66M6xhOBQlgBIoF2zFCbXEdgxntjevy
      TxU5BRJKkwCE0iQAoTQJQChNAhBKkwCE0iQAoTQJQChNAhBKkwCE0iQAoTQJQChNAhBKkwCE
      0iQAoTQJQChNAhBKkwCE0iQAobRh853ggKeBnQe6KJxQRV6a/eNbo3TVVfPhvhbCpo3McZOZ
      M6UAG2CaJt2NO9i+t4WAnsrkuedQlO6I5yqIESj+RwAjyKHtb/H751fx4Ucf0dEX/XiCSc/+
      9/nL+3WkFZZTUZyFd9cbrN7VhQHQu4fX36zGll9G6Sg/a//0Fk2+OK6HGJHifgQIuNs5ZBnD
      kuuns/O9twZN8VG/r4OCuRcwtywLgKLsCM+u3Edf1Rza1r/HqItv4fxSB1CBLfQiu6pbyD+n
      IP4rJUaMuB8BXDlFzK2aSLJDB23wFAfZeUm4G1roj5iYUR/N+1tILMzHhZfm1jRKi5xomoam
      aaTk5mPxdBKI14qIEWkYv1jayJ08l8mb1/PMb9/HQCejaDqXLCjEwWHC9hTSBo3eZk/BYfUT
      AwzDIBwOH5sWjR45rfL7/Wd4HU4P0zTiPQQikSjmWbA9h28ARpiOfVvZ2ZvNkpsvJVkLULtx
      Ne/tyOPyeXb0kB+fwbFjWCzqJxzR0QBN03A4PrkgtlqtaJqGy+WKy6qcamFNx4zzGKw261mx
      PYdvABEP1ft9TLpgDjkpiUAilefPo+7JzbRNv4Kc9F4OdUYpHn1kFfxeN7GkCpwcCeB4R0+V
      xKlx9IVmpIv7NcCQrElkJfnZs6uO/qiBEfPTvGM7nqTRpNkTqZiZy97VGzg0ECXirWHjVg+j
      ywqw/+1HFuKYOB8Bohyu2cSbb22kK2gQDofQ9ixlfWIy513zHaoWXgrvruPpR94haNrJLJzC
      VV+ZR7pVg9KFLOh6nddXPIzPks45i65mWq6Tkf+aJM4kzTTNeJ9OnnZutxtd18nMzIz3UE6J
      nl23xv2P47ryb8SVf0Ncx/CP0jRNG76nQEKcARKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQil
      SQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoE
      IJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBC
      aRKAUJoEIJQW53+U/QnTNDAME03X0TVt0O0mpmFgmCZoGvrH003TBNPEMAzMQbcL8feIfwBm
      DH+Pm9qPPmRD9WHmf/kGpo1N+HhahK763WzYsIlDvSF0RwbzrlrCzDEJEOll06o/s63eS0Rz
      UDb3Mi6YUUxi/NdIjCBx313CvR3s3rWTLp+D7Eznp6bFvHWs29RI5SU3sDgvGdPXjSeiASbe
      fWvZG6nkujumkx5tZdWf17EzO5t5RUnIcUCcrLhfA1icKZRUfYmLzptBTqJl0JQIh/bWoJfM
      oHJMKjZdx548itwMF9BPzY4+Ki+cTpbLgjV5LFVTc+g+2EIoXisiRqS4HwEsziRGOSHq6z5u
      ip/2tghGwlaeWf4n3ANR7Mn5LLjqKipz++nypTE17ZNgXClZ2Jr6CAKOj68NjjI//jkWi52Z
      lTrtzHgPAMMwz4rtGfcAhhYjGg1gJFRx9S2LSbEbdNZsYOWaTYz+egVYbdgGnetomhWLHgWO
      7PCDn5yjMUQikTO6BqeLGf/9H8MwzortOYwDcJCY6CB9dB6pziPDHDV+LoW7/kh3YArOWB89
      Eci1HZk7Gu4jZCRhBXRdx263H3ski8WCrus4nc4TLGfkCWpa3I8BVqvlrNiecb8GGFoChSVp
      1O3aQ08gimkahAYO0RNMJ9GRQXl5gN3bOwjFTIyIn0O1TVgLxpAQ72GLESXORwCD/s5m9tc2
      0e/3U9fUhiv2Ab5DSYybNJcx5bOZ1bialW+uJT/Diq+rk7RZC8l1WNBnX8DWl99kdV8hybEu
      Wn1jWViWPZyLFsNQ3E+BNIsVh8NJzOpkyqz5AOhWO1YdsGUwc+FlZByoxxs0yKiaQEVpFhbA
      TCrmkss16lu6COlZXHxuOTmuuK6KGIHiHIBOUuYYJmeOGXIOizOd8VNmfOZ2TdNIzimmKqf4
      dA5QnOXkjEEoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAo
      TQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIk
      AKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSov7/wk+KuLrps09QHpO
      Pikuy6cnGmE87a10+h2UjM/DDpimid/bRmtHDxHNSe7YQjIShs3qiBEi/kcAI0xX/Q5Wv/EG
      r656m4Pu0HEzmPi7mtj8zqu88MpG+o/e7Gtm3cq32VXbSGPNFt5a8yHu4Bkeuxjx4h5AwN3C
      Ry19FJRPpTjL+ZnpZjRM/d7dWHLHMzr16HSDth3v0Df2Qq5YtIhFl19OoXmAnQc9mGd2+GKE
      i3sArpwSLjj/fCpL8ki0a8dNNfA2fcBezxhmTxuHXT863cPe3XamnTOWBJuObk+lqLKIUGMz
      vjO9AmJEG9YnzdGeRjbu6KXqwvmkW/YPmhImoCeTZv/kFps9GbsWIsqR64NoNHpsWiwWwzAM
      QqHjT69GJtOM/3EuGoudFdtz+AYQ62fftgMkTJzF+Awr9B433TCIDfrRNA0M45Ofdf2Tg5um
      aWiahsVy3MX1CKVpxP1UTz9LtuewDSDkdVPfUkPNtmq2rtQg5qfDHaRzmZsFC+eT7uiho8+g
      IOXIjh4c8BCx5+OAz+zsuq6j6zpW67Bd3b/T8aeKZ97Zsj2H7Ro4RhWz+JYfsPjoDb17eOKF
      Jq6+43IyMenq38pr63dTfMkkUmMd7KluJ3XWXD57GS3E0OIcQIzOuu1seHc7nkCYrs7D2Op6
      2J6ewuxFNzI5Z6j7aWRWXkhJ0+u8/PQmTE1n9IT5nFOYMgxeG8VIoplxvaIyiUVCBAIhYoNG
      oWk6joRkHIPzNKL4gzGcCQ50jlwIxiJBAsEIpqbjTEjAbjnxm1putxtd18nMzDyta3Om9Oy6
      FSPUFtcxuPJvxJV/Q1zH8I/SNE2L8xFAw2JzkmQ7iRMX3UrCoN/0apqG1e4i2e46jeMTZ7u4
      /x5AiHiSAITS/h91knd15ujGBgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Average sentiment score by type' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAVuUlEQVR4nO3dd5yUhZnA8d/bpu3MbK9soRepQZqiAkLAiFGCLUZNNGfiecklFz+JMTm9
      S7vP5XLe5RJjml7QJOaI0XiJJREUQVGKFGnLLmUXF9gC22bbtLfcH4uhDYg52Z3hfb5/wey7
      8z4z+/5m3nmnKY7jOAjhQoqiKOpgDyHEYJIAhKtJAMLVJADhaq4LwLbtwR5BpBHXBbB3797B
      HkGkEdcFIMSJJIAMYptJEkkLeebmgyMBZJBNv/8Pfvr7t4kO4Dr7OhvYvKWGSF9yANc6cCSA
      TGEfYdvWFkZOGUNAOU/r6Kzn2SefYleH9ZeTWva9zL8/9Gvqj/adp5X2az/0Fr9/ZhUt3QMb
      mj6ga0tLDo5lEovFMW0HVTPw+rzoKji2RSwaw7RB1T34fQaqAslYlKTiIeDVAZtYXxTF48ej
      QTwaRfX4UK0EcUvB5/eh2Ali0QSWA5rHi99rgG0Si8UwLQdV8+Dze9CUM23ZDsm6tVRrs7hm
      eDDFjx3MZJx4IomNgm548Xp0VMAyE8TiCWxUdI8Xn6H1X96ECY6FZYPu9eHVFRJH9/PyC38m
      OXUBlYYPn99H6Zir+acH+6gozsK2ksTiJroGiaQJio7Xa2Al4iQtB93rw+fRUXAwEzFicRNH
      UfF4fXgMDcVK0BuzMAwVM5nEpv9nhmLS/M5WVr50hKopkwhqQXx+H5py4kU0ifUlUA0dK5nA
      cpT+89VVHNskEU+QtGx4d326inLG6/M4CcCKsufV5fzi+V0kDZWsUBHzb/1b5pRbbF/zB556
      eSdxy8bylrDkk3dw+Vgvax7+Msuz7+Kxz84AjvKfX/wihbf+G39zmc73vnAfpUvuJlT9NGsj
      E/jCl66ndfVveHptHYqhU3TRR/n87Rdz+M0X+e2KzURiSSwtn6tu/zQLJ5SQ8k9m9/LmC28w
      dNFXKDVO/3Gyu5EXly/jtZo2VMNP9tCZfOoTiyjiKKuffZpXdx/CTKr4K6Zy5x1L8e9/gQd/
      9DLjR+Sw/8ARPFOu42s3T2bV00+yt7GBzoe/w8bi0dx8502U92zm4Z+s4+4vf5nCyGq++YOX
      mDVrIg17dlPfZjBnyQKM+i28tb0GZ9wn+JcvX423fS/P/Go5Ww914VgW+eOv4s5bFlJy4Flu
      +8ZqFt+0gMjuzexvaGXC0i9xx9hmfvzEK+yvj/Hz77czbMxsPv7p6xmadfwyxrrXc/9tP2fU
      DYuhYTvbG9oYPf8O7ll6MZ17XuPZ373CgZ44sb4EhdM+yj/cNp9sj/aef34JIHGUda9upWTR
      F/nCoqH0NNbSouu07VvL489Vc83n7mPuCB97nnuEf3/8zwz/1nVnPz+7m5rNbzN57CLumjwO
      p/p5lq3p4p6vfZvJRRrtLT3Em6pZ/nI1l996L1eMDlH/p0f47lNvMG3C9eSnOEurtYZVB0u5
      +a7ClKvsOfIOb9R2sfTzD3BJhZd36loI6BYHNqxiXUs+d3/tHsq1Rn7zvf/iT9suY2kQsExu
      vud+zNo/8sCvttIbXMTNt93Fm9WPM//+73JtpQeA5upT1+alcuZ1fPL2JTz70LfYeCjIg3ff
      z5Lq3/H57++kiTn0/mk5O71X8PV/uZxgrJ6ffOO7rKyezu0BcFApGHMFty9Zwq5fP8Cjb+8k
      Mu9GvnJPAw892szfPfBFxpX4Ul5Ox4ZgxVRu/vi11Lz0Ix59cze9V08lWDKOpXdPo6g4i47t
      L/LgD9ayb+llXOwJnP1vhQQA3lzGjCnhsWd/yCPti7ly9hRGFkPtplr6QuOYWpmLZuiMveRi
      vM88w57m9wggoVAwegZLlkwn7O1m1SvVGMMXMqUsiAoUDvHwzoZVHNi5gbqHDrFcV3FinUSN
      AF1wegBOkvod2zBHXMQIf+qHbFk5hYzI7uGXjzxC09WLmTl5DNm6w7baLWxY28Sh/W+gKTY9
      rS0Mn9QNQSBQiM8wiGo6qm1inuv1lZVDaX4Y3Zcg6A+QX1xK2KdDKIiqqDjRVnZU17NzTx33
      b/0fwCHSHWN2RwQC4PHlUjakEK8OHo+ObVvYqY5qNW3m3376P9Q1m0xc9HFumgtGVoiykmL8
      Hg3dMHDM/iNiaqyN1f/7GBt2NhKNRqirz6M75ZmeTgJQw1zyyfsZv6CONaue52f/+GuGfup+
      FmoajmPy7vPGdiKBpXjQNTjrwzRfkNLyMsJeDdAwPDpWNInN8SMOCgoUTeO+b3+ViwqzznJm
      YEfbebs6wuTpV2KcYZ/WUzCKz3z9IRr3vM1Lzz3F15d7+ex9d4PiYeSVt/OtexaT6zseT9Om
      mnO8cv4KioKCwsTr7+M7Hx938i5d9cZzP5/Si/nqNy/+y3+jXWtTLmbHI7zy22VsDyzkG9//
      MLkdW/nag8+d82rkKFDPETZu3EYkUM41t3ya6y8tZHdtC5Ujx5PTvZM1NUcwE+289cqbOCPn
      MLbIwB/QsTo76UnGad2/m4O9ZzrzLC6aMQVl7+us3d+BZcZoqm8iMGQ4w2jg96/soMe0MPva
      qdmwg7YU59DddoDDUZXRlSWk3v4dIi372fp2PaHhM7j9jtuY6O1kX8RkyOgxxLavYv3eFizb
      pKt5N1v2pFrLMcEgRd4Ehw52YNk21l/zhIOvgEnjh7L/tWfYdLAHyzJpOVhDdd1Z1gt4vHlo
      ZhtHevpwLItzfcWKYzvEYhbZBfl4nD6qd2zlUEsXALHmapY/9n3W1MWBDjY+9ThPPL+DE49n
      yT2A4UHvrOax7zxOc08CI1TFJz4zmfCwAH//NzGeWP49VjyaJFh5MffevYgiw0fwqqXk/+uT
      fOWra5h42QzKi7LxezRQVILZx/4NgEre+MV86dYky37wdZabPkZdcRN/d+NUPvP5W3h02a+4
      d9UT+HOKmDn/Bq5NMV7Lnu0ksidQWeRL/QAZMHSVpu3P8ZvHf0SvqZI/di43jiim3LeEu9ri
      PPmTf+YPipf88rFcfeOtqIaP7HAQRVFQPf3/1hUgewy33fFh/uPxB/n75ydwxz23M1T3Eg4F
      0TUVVfcRDmWhqwqg4A2EyPIeu6yal+zsABp+xl/3Ge7se4z//ta9PObxUzFmFtfe8FEwfeRk
      BzGO3ezqviDhrP6jPQVVM7n60p08/dD9rBqzkE/ffQNVJ+zCK6qHUHYYj97/y7o3QDjkx/CH
      mDH3Mrb95ufct76COdNHUFZZhEdVSHa1sHXDa/RN/ixzhkdp2PYWb+WUseSaicfP123vCKut
      rWXMmDGDPcY56uZ3//oAyQ//E7dMyz9jAOKvI+8IS3N2yya2tI1m2jjZ+M8XuQdIY06im6Nd
      kF8Q4r2PaIv3S1EURR4DpDHFE6KoYLCnuLDJLpBwNQlAuJoEIADoizTTmOoVn1acpoOHaO+J
      D/xQA0ACyESOQ2PtRrY1RD6ws4y01LCrruP0H5g91GzbQUP7GZ/ty2jyIDjj2MS6O2nYt5uD
      wRCl/gTerByyPRadMcgJ9r+QzDaj9MZUsoJenHgvvUlwElEStoI/K4hux+mJWWSFwvg8GuBg
      JqJ0trWSdFT8wRABr3HKLaRDoi+G7TFQE310xxWyw1noWubejkoAGSdB4871vLXrAN2eGNGD
      QYZ8aCHzc+r4xXqHe6+fBUBf0yb+uDHEx66fQmL3n/nlDp0KTy+RvihqoJCybDjc3E7J2HnM
      nVUFZpzmvVt5tSlJV28Sb/Eo5l0xjSLj5HXXvbmejvJcYjW7OaRVsfjKaeRleQblmvggSAAZ
      x8fwSz7CArOH+vAVXD2lpP/kw3Vn/hVFJVw6hvmzR2JEG/nTH58nPO0TTJ1wkM1bG4lRBYpG
      TsV4Fs0di8dsY93K19lzqI2iYadu3F1Ub2lj2oy5zBpajE/P3Ft/kMcArqCoOjlFJYT9Oqrm
      I5QbJj8vB8MTwKODA6AZBMPZBAwV3VfAiPIgHV09Kc7Ny/APzWTiiFL8uprxz1BLACIFk1jU
      wetJtYPgJRz2oWb6ln+MBJChdFWht72DmGVhmhZ4PHh7uokkTWJdjWx9q5r3d9zGxjSTWLZD
      pHE3Wxu6KS1I9f60C4s8BshQZWOnsm/FK/z04ZcZNe9GFk8cy4KqF1j2o4fxhMuYMG4opb0+
      VED1hQjb/a8mUjSNYCgbjwaq4yEr6EcDfIaPjt0reWRjN1qojOlzrmRsWQjMCFnBID5DAxS8
      WVlYxoXzyiR5MZxwLXk5tHC9lLtAjuMQjQ7k548NHMuy6Os7vx/yJDLHGQNobW0d6FkGRDKZ
      vGAvm3j/UgagqiqVlZUDPct5YZomlnX8o/56e3spLEz9+TrCfS74o0CapqFpx49aqKqKz5f6
      g5eE+1zwAaT6fMhz+cxI4Q7pHYAdpeb1P/Pqzib8ZZO45qpZFPhPHznRe4TNq19m24F29JxK
      Lpk7j3FDQvIsn3hP6buN2DH2vv4iG/oqufXOTzFvSCv/+8Imuq1TF4yz+YWnacqdwS133sV1
      s4p5e/UK9rZcmK9fFx+stA3A7m2huj3EvEvGEw5kUTVtAeOt3dS2nVpAN52dISZMGkl2wEdh
      5Wiqcvx09V6Yh3HFByttA0j29GAFA4Q8x16QrgYpLtVobTt1w85mSKVCzY46oqZNx+F6WmIO
      hTkpPkdfiFOk7WMA27Hx+3xoJ7zbKBgMnXRIs5/O0EnTaXpzNT9b14EeLmHaZVdSEsrcN2mI
      gZO2AWiqRl80emyD7x+zqyuCceo3RCSOsP61HeTNWsLnluaSjDSw/vW3qPZdxtSheQM/uMgo
      absLZITDeLp6aI8l+k+wOzl0UKG46JRj+LEmDnflMbwqD0NVCOQUU5qlcKSje+CHFhknbe8B
      FH8pM8dU8/zK1+ibVEnXvs0cLp/FZTkqYNHe1IiaU0ZOaDSjc55k9cosxlXlYkYOs73ZZNoE
      ufUX7y1t7wFQNIomzGHhRWEO7q8nWjCVj146El0Bp6ueFSvWcTRqgxJg+uKPMTrUy4G9tTT1
      +Lhk/nxGFYUG+xKIDJCB7wcwObh+DQeLJjNzeMH7/tBYeT+AeFeGfjiuTsWs+VQM9hjigpC+
      u0BCDAAJQLiaBCBcTQIQriYBCFeTAISrSQDC1TLweQCRiUzLJGknBnsMfLr/pLfESgBiQLy6
      byXLNvxssMfgiVufwtCOv1RedoGEq0kAwtUkAOFqEoBwNQlAuJoEIFxNAhCuJgEIV5MAhKtJ
      AMLVJADhahKAcDUJQLiaBCBcTV4OfUzf+g3Yg/zVsMaQMryjRw/qDG4jARzTufy3mM3NgzpD
      8MMLJIABJrtAwtUkAOFqEoBwNQlAuJoEIFxNAhCuJgEIV5MAhKtJAMLVJADhahKAcDUJQLia
      BCBcTQIQriYBCFeTAISrSQDC1SQA4Wpp/JZIh3hnA6+99DI7D0fQQ+VcftVCJlXknFxt9x5+
      uexFjiat/v/bSTojPubdcQtXjiwejMFFBknfAMxudq3bRGzYXD53QxU9Bzbw4pqNlN20kCLP
      CcuFRvPJLxx/H228o4HV63YxNDd74GcWGSdtd4Gs7qPUm7lMH1uOR9PJGz6d8eEG9h0xz/p7
      rYf3k/RXUJLjHaBJRSZL23uARLQPIyuA32P0n6B4KCwKsa2zF8rPcOtudlCzs4mRi+bg1/q/
      CtO2bRzH+csijuNgmqdHdOIyg8W27ZSzXQhs2x7sEQAwLQvFOX4dp20AAKp28h2UpmlnWdqh
      c98bHM2dyexclXe/CdZxnJOufMdxsCzrgx/2A5DOs/1/pUsAlmWhOse3q7QNQNcNotEOLMsG
      VHAcuiIRfLm+FEs7OPEWNmyJM2VxFScuoWnaSeGoqorXe/ru0YlfnjxYNE1LOduFQNfTY1Pz
      ejyZ8T3BRm4hJbF2qg+3Ytk2fe017DqUx8jyFBuIY9Fcs5vu8rGMCp3tXkKIk6VHlqkYuUye
      WsXKN1fzh10ekn0x8qfOpdwHEGfvpo3ow2cxLM/AjHawt7GXUeOHoKbBLflAsGKNxI+uGNQZ
      jJwZGKGLBnWG/6/0DQCVcMUkFi4o5mhXDM0XpqQ4Dw0H68gu3tiT4OoJ/bf2qifMxFmX4g+G
      ccn2jx1vIdb020GdQTWyJYDzStEIFZQRKjjxRJOmRph37eUU+fr34FTdS27uhbnvLM6v9A4g
      JZ3yKVMHewhxgUjbB8FCDAQJQLiaBCBcTQIQriYBCFeTAISrSQDC1SQA4WoSgHA1CUC4mgQg
      XE0CEK4mAQhXkwCEq0kAwtUkAOFqEoBwNQlAuJoEIFxNAhCuJgEIV5MAhKtJAMLVJADhahKA
      cDUJQLiaBCBcTQIQriYBCFeTAISrSQDC1SQA4WoSgHA1CUC4mgQgXE0CEK4mAQhXkwCEq0kA
      wtUkAOFqEoBwNQlAuJoEIFxNAhCuJgEIV5MAhKtJAMLVJADhavpgD3BWjklH00Ea23vRs/Kp
      rCjGr6do1rGJdbfT2HSEPlMhmFdCWVEOHk0Z+JlFRknjAGwiB7awYkMDoZwgic5t1HVcwcKp
      FWinLBmNNLLpjY10Kn48qoISSZIdDuHJSuOLJ9JC2m4hTqKNLW83M2zmHC6uysfsruOlZzfw
      zthyhgdOvGV3aKndRGfuZOZPH4pfg3jCRDdk7068t7TdSszOVtoCOYwsykVTVbzZIxlb0UXd
      4fgpS0bYs6OVggKNd2p3sXP3Ptp7kyhq2l40kUbS9h7ANE38Ph+adnyHJ5ydTTweB3wnLBnh
      aFOU7oN1RLFJxnrYUdvAJXNnMywvgGVZWJb1l6Vt2yYWi522Psexz+OlOTeWZaWcLeWyyeR5
      nua9maZ5zvMm02BegHg8jqUe/1unbQAApmXhOA7Qv8uTTCRQ/Kc+sHUwfIVMmDGbkVkeFKuH
      7a++yr5DbQzLC6CqKopy/HcURcEwjBRrG/wHzKqqnmG20ymaxqn3hQNN1bRznvfEG7LBpOsG
      hnZ85rQNwBvIwuo5Ql8ySY7fC06cI0f6yK0KnLJkEUWlnXREHNSQgqIGyM8O0OKYQP8Gf2oA
      qf4YJy4zWM40Wyp2Guziqe9jXjUN5gXQNPWkmdNjqhTUUBEjvB2s3/EOccukdc86dvUOZVTR
      qc0GqBxVyJ4NGznanSDR1UxtUw95odCgzC0yS9reA6BlcdHs2XStXMFPfvgCRs4w5n9kPvkG
      OFYXa//wHMFZN/ChMi+Vk+YyOfo6zy77MTEtxLiZ87ioIm+wL4HIAOkbAApGsJTLP/YpLj/p
      dJvI3i00507j2jIvALo/n8lzlzB57iCMKTJaGgdwZk5wBPMvLcU72IOIjJeBAajklFcM9hDi
      ApG2D4KFGAgSgHA1CUC4mgQgXE0CEK4mAQhXkwCEq0kAwtUkAOFqEoBwNQlAuJoEIFxNAhCu
      JgEIV5MAhKtJAMLVJADhahKAcDUJQLiaBCBcTQIQriYBCFeTAISrSQDC1SQA4WoSgHA1CUC4
      2v8BxqNGB3BCudsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Caught image' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Cluster analysis' width='192'>
      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
      kPZaHZ3bzf8HoS+C3UZxTZAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Cluster example image' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAADfklEQVR4nO3YsWoVXRhG4W9+LRSCmMpGgkXATgyIwZsQBG28Bu/ORgJHGxFLqyhIFEwl
      ojYSFJRj/2vtFOt5ytnN2yxmZi/b7XY7ELQsy/Lf2iNgTQIgTQCknf//g+12O34LqPhrAKen
      p2tsgX9ucQtElVsg8gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA
      0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBN
      AKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRA
      mgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJ
      gDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBI
      EwBpAiDt/NoDir58+TKvXr3669nly5fn0qVLs7+//49XNQlgBZvNZg4PD/96dnJyMi9evJhH
      jx7941VNPoFWcHZ2Nnt7e/P169f58OHDXL16dfb29ubHjx9zfHw8165dW3tihgBW9Pz58zk6
      OpqfP3/Omzdv5smTJ/Pw4cP5/Pnz2tMyfAKt6P79+/Pr16959+7dPH36dO7duzfPnj2b09PT
      tadleAOs6MqVK3N2djZHR0dz69atefny5dy4cWN2d3fXnpbhDbCi169fz2azmdu3b8/bt2/n
      7t27s7OzMzs7O2tPyxDASk5OTmaz2cyDBw/m4sWLc/Pmzblw4cLas3IEsII7d+7M48eP5+Dg
      YN6/f//H+adPn1ZY1bRst9vt2iNqPn78OOfOnZtv377N9+/f/zhflmWuX7++wrKWZVkWAZC1
      LMviFog0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIE
      QJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCk
      CYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoA
      SBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYC030kLhF+4RZ1XAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Image_counts' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sentiment color' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAC10lEQVR4nO3cPY7TYABFUf8hwRLYAxJ7YDO0dHQsid0NFJPYVESaakSkb2Jxz6lSWLYL
      38Rp3nwcxzFB0DzP8/Lom4BH2v5+uFwuj7wPeIhbAPM8T+u6PvJe4M15BSJNAKQJgDQBkCYA
      0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRA2m0W5TiOad/3
      YRd6en6aJiN0/KP37z5M6zxurudFACNXEr/9/Dr9fv417Pz8n75/+TF9+vh52PlvASzLYhiL
      0xn9XPoPQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMA
      aQIgTQCkCYC02yzKvu9Dd4HgHtf9Ol0ul2HntwvEqa3LOm3b9vqBd/IKRJoASBMAaQIgTQCk
      CYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZBmGItTM4xF
      mmEsGEgApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQ
      JgDSBECaAEgzjMWpGcYizTAWDCQA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBN
      AKQJgDQBkCYA0gRAmgBIEwBpAiDNLhCndt33t9sFWhY/CJzLOniv6sXi0DzPwy4E9xr5XPrK
      J00ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDS
      BECaYSxO7bpf324Ya+QAEdxjXdZp27bXD7yTVyDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECa
      AEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANMNYnJphLNIMY8FAAiBNAKQJgDQB
      kCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRA2h9GxWfvB9/rMwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='108' name='Sentiment counts' width='192'>
      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
      ayIAgqz9P6iZr/dLl5OfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sentiment distribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Source analysis' width='192'>
      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
      ejQaDc3NzYiiuKRe83ZKS0vZt28fn376KS6Xa5aF5FasVisvv/wyzz33HNevX+f8+fM0NDRw
      +fJlRkZG+LM/+7NFySIIAnv27GHPnj0MDw9z8eJFPv30U8bHx3njjTf4oz/6o0VZyl566SU2
      bNiAJElEo1EGBgY4c+YMf/3Xf82XvvSljCXkVkwmE8888wy/+tWv0Gg0s+Y6C7F9+3a2b9/O
      6OhoRu6RkRF++tOfIghCpkOaHn4tNMSbzp/P+rQcuru76e7unpFWWVnJSy+9RHV19Yz0JSnA
      9HDk0KFDHD58eFb+xMQEfX19cy5u3Mqtb4E7vTGm2zt16hSnT5+ekSdJEqlUihs3btxRiRZD
      XV0dn376KVVVVQv2WJDu1aYfhOHhYX70ox/R19d3x/WH+SgoKODLX/4yTz/9NL/85S85ffo0
      hw8fXpQC5ObmUl5envl706ZNPP744/zwhz/k/fff56GHHqK0tHTO8wXIycmZsXi3FHJzc3n6
      6ad56qmneOedd/jwww95//33MwowPYcaHByctw5ZlhkaGgIgLy8vkz7dQ09PvG9nOn2+xcJN
      mzbx6KOPcvPmTY4fP47FYuEP/uAPZs3rYAmT4EgkQnt7OzqdjtLSUkpKSmb8XC4XsDjrTElJ
      CTt27KCzs5P29vY5y6RSKZqbm9FoNHO2N30yC1mf7jYFBQUZ86HX6112PWq1mq985Ssrrken
      02VW26dX4O8mKpWKZ599FkEQGBkZyaRPy9Da2jrvW6C3t5eJiQmsVuuMIa7ZbAaYd14wMTEB
      MO+QMz8/n927d/Pyyy9z8OBBQqEQP/rRjzLH3cqi3wDTw41HHnmEr3/967Pye3p6+Ju/+Rsa
      GhrmfPXezpe+9CWuXr3K+++/P+eCVnt7O9FolJ07d87pSjA2Nsaf//mf09jYyNe+9rUFJ3Er
      IZlM0tLSMsP+fSvTZrXp9YE7cf36dcrLyzM3ebn1zIcoinR2dgLp4U62aG9vp7CwEJvNNitv
      cnISWZZnyJ2bm0ttbS03btzgvffe4+WXX55xjCRJvPXWWwAz1giAzFutoaGBF154AaPROOPY
      8+fPzyg3H4Ig8MorrxCJRDh//jw//vGP+ZM/+ZMZ57BoBbjdGnM75eXl2O12+vv7GRsbW/DV
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
  <referenced-extensions>
    <referenced-extension>
      <manifest manifest-version='0.1'>
        <dashboard-extension extension-version='0.6.0' id='com.tableau.extensions.samples.uinamespace'>
          <default-locale>en_US</default-locale>
          <name resource-id='name' />
          <description>UI Namespace Sample</description>
          <author email='dmartinez@modux.co' name='Diego Martinez' organization='Modux' website='https://www.modux.co' />
          <min-api-version>0.9</min-api-version>
          <source-location>
            <url>https://difemaro.github.io/Extensiones/Samples/AutoRefresh_seconds/AutoRefresh.html</url>
          </source-location>
          <icon>iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEwAACxMBAJqcGAAAAlhJREFUOI2Nkt9vy1EYh5/3bbsvRSySCZbIxI+ZCKsN2TKtSFyIrV2WuRCJuBiJWxfuxCVXbvwFgiEtposgLFJElnbU1SxIZIIRJDKTrdu+53Uhra4mce7Oe57Pcz7JOULFisViwZ+29LAzOSjQYDgz1ZcCvWuXV11MJpN+OS/lm6179teqH0yDqxPTCyKSA8DcDsyOmOprnCaeP7459pdgy969i0LTC3IO/RQMyoHcQN+3cnljW3dNIFC47qDaK3g7BwdTkwBaBELT4ZPOUVWgKl4ZBnjxJPUlMDnTDrp0pmr6RHFeEjjcUUXPDGeSEwDN0Xg8sivxMhJNjGzbHd8PkM3eHRfkrBM5NkcQaY2vUnTlrDIA0NoaX+KLXFFlowr14tvVpqb2MICzmQcKqxvbumv+NAhZGCCIPwEw6QWXKYRL/VUXO0+rAUJiPwAk5MIlgVfwPjjHLCL1APmHN94ZdqeYN+NW/mn6I4BvwQYchcLnwFhJMDiYmlRxAzjpKWZkYkUCcZ2I61wi37tLbYyjiN0fHk5Oz3nGSLSzBbNHCF35R7f6K1/hN9PRhek11FrymfQQQKB4+Gl05P2qNRtmETlXW7e+b2z01dfycGNbfFMAbqNyKp9Jp4rzOT8RYFs0njJkc2iqsCObvTsOsDWWqA5C1uFy+Uz/oXJeKwVT4h0RmPUXhi79vuC0Ku6yOffTK3g9lfxfDQAisY516sg5kfOCiJk7HoLt2cf9b/9LANAc7dznm98PagG1fUOZ9IP5uMB8Q4CPoyNvausapkTt3rNMuvdf3C/o6+czhtdwmwAAAABJRU5ErkJggg==</icon>
          <context-menu>
            <configure-context-menu-item />
          </context-menu>
        </dashboard-extension>
        <resources>
          <resource id='name'>
            <text locale='en_US'>AutoRefresh</text>
          </resource>
        </resources>
      </manifest>
      <referenced-views>
        <referenced-view instances='1' viewId='Source analysis' />
      </referenced-views>
    </referenced-extension>
  </referenced-extensions>
</workbook>
